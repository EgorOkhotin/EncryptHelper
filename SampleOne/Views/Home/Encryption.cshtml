
@{
    ViewData["Title"] = "Encryption";
}
<div class="container-fluid movable-exit">
    <div class="row">
        <div class="col-md-12">
            <h2 class="two-header center-header">Encryption</h2>
        </div>
    </div>
    <div class="row movable-onload">
        <div class="col-md-4">
            <a class="plate-button setting-button" asp-action="BackToChoseAsync" onclick="pageBack();">Back</a>
        </div>
        <div class="col-md-8"></div>
    </div>
    <div class="row top-margin movable-onload">
        <div class="col-md-12">
            <textarea class="encryption-textbox" id="textBox" rows="10"></textarea>
        </div>
    </div>
    <div class="row checkbox-row movable-onload">
        <div class="col-md-2">
            <label class="regulag-text">Encryption</label>
            <input type="checkbox" name="Encryption" id="encryptionCheckbox" onchange="changeEncryptionDirection('encryption');" />
        </div>
        <div class="col-md-2">
            <label class="regulag-text">Decryption</label>
            <input type="checkbox" name="Decryption" id="decryptionCheckbox" onchange="changeEncryptionDirection('decryption');" />
        </div>
        <div class="col-md-8"></div>
    </div>
    <div class="row movable-onload top-margin">
        <div class="col-md-12">
            <input class="plate-button" onclick="transform();" value="Transform" type="submit"/>
        </div>
    </div>
</div>
<script>
    let direction = '@(ViewData["direction"])';
    if (direction === "back") {
        backPageLoad();
    }
    else forwardPageLoad();

    function transform() {
        if (isValidDirection() && isNotEmptyText()) {
            transformText(getTextboxValue(), getTransformDirection());
        }
        else alert("Input parametrs are wrong!");
        
    }

    function transformText(text, direction) {
        getTransformedText(text, direction, transformCallback);
    }

    function transformCallback(text) {
        console.log(text);
        let textBox = document.getElementById("textBox");
        textBox.value = text;
    }

    function changeEncryptionDirection(direction) {
        if (direction === 'encryption') {
            let checkbox = document.getElementById('decryptionCheckbox');
            checkbox.checked = false;
        }
        else {
            let checkbox = document.getElementById('encryptionCheckbox');
            checkbox.checked = false;
        }
    }

    function isValidDirection() {
        let checkbox = document.getElementById('decryptionCheckbox');
        if (checkbox.checked) return true;
        checkbox = document.getElementById('encryptionCheckbox');
        if (checkbox.checked) return true;
        else return false;
    }

    function isNotEmptyText() {
        let text = getTextboxValue();
        return (text !== '' || text !== null);
    }

    function getTextboxValue() {
        return document.getElementById("textBox").value;
    }

    function getTransformDirection() {
        let checkbox = document.getElementById('decryptionCheckbox');
        if (checkbox.checked) return "decrypt";
        else return "encrypt";
    }
</script>
